[{"/Users/ggyu/Desktop/starthub/fullcalendar/src/index.js":"1","/Users/ggyu/Desktop/starthub/fullcalendar/src/reportWebVitals.js":"2","/Users/ggyu/Desktop/starthub/fullcalendar/src/App.js":"3","/Users/ggyu/Desktop/starthub/fullcalendar/src/Modal.js":"4","/Users/ggyu/Desktop/starthub/fullcalendar/src/Modal2.js":"5","/Users/ggyu/Desktop/starthub/fullcalendar/src/Select.js":"6","/Users/ggyu/Desktop/starthub/fullcalendar/src/Dateconfig.js":"7","/Users/ggyu/Desktop/starthub/fullcalendar/src/Colorselect.js":"8"},{"size":478,"mtime":1609815216539,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1609736410342,"results":"11","hashOfConfig":"10"},{"size":5716,"mtime":1611217529639,"results":"12","hashOfConfig":"10"},{"size":5261,"mtime":1611217869632,"results":"13","hashOfConfig":"10"},{"size":2763,"mtime":1611217532394,"results":"14","hashOfConfig":"10"},{"size":862,"mtime":1610691357997,"results":"15","hashOfConfig":"10"},{"size":1600,"mtime":1611214731892,"results":"16","hashOfConfig":"10"},{"size":1365,"mtime":1610522008577,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"s9h4v4",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/ggyu/Desktop/starthub/fullcalendar/src/index.js",[],["37","38"],"/Users/ggyu/Desktop/starthub/fullcalendar/src/reportWebVitals.js",[],"/Users/ggyu/Desktop/starthub/fullcalendar/src/App.js",["39"],"import React, { useCallback, useRef, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugsin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { Modal } from \"antd\";\nimport Modal1 from \"./Modal\";\nimport Modal2 from \"./Modal2\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\n/**\n * 더미데이터\n */\nconst users = [\n  {\n    id: 1,\n    name: \"nive\",\n  },\n  {\n    id: 2,\n    name: \"sam\",\n  },\n  {\n    id: 3,\n    name: \"gyu\",\n  },\n  {\n    id: 4,\n    name: \"jung\",\n  },\n  {\n    id: 5,\n    name: \"cheol\",\n  },\n];\nconst user = [\n  {\n    User: {\n      id: 1,\n      name: \"ggyu\",\n    },\n  },\n];\n/**\n * 캘린더 컴포넌트\n */\nfunction App() {\n  const { confirm } = Modal;\n  /**\n   * 일정 등록 모달\n   */\n  const [isVisible, setIsVisible] = useState(false);\n  const [dateStart, setDateStart] = useState(\"\"); // 달력 클릭 했을 시에 datepick에 표시 할 상태\n  const [dateEnd, setDateEnd] = useState(\"\"); // 달력 클릭 했을 시에 datepick에 표시 할 상태\n  const [changeStart, setChangeStart] = useState(\"\"); // 날짜 상태저장\n  const [changeEnd, setChangeEnd] = useState(\"\"); // 날짜 상태저장\n  const [events, setEvents] = useState([]); // 이벤트 저장\n  const [event, setEvent] = useState([]); // 한 개의 이벤트 가져오기\n\n  // 시작 날짜 저장\n  const onChangeStartDate = useCallback((startDate) => {\n    setChangeStart(moment(startDate).format(\"YYYY-MM-DD\"));\n  }, []);\n  // 끝 날짜 저장\n  const onChangeEndDate = useCallback((endDate, isSwitch) => {\n    if (isSwitch) {\n      setChangeEnd(endDate);\n    }\n    setChangeEnd(moment(endDate).format(\"YYYY-MM-DD\"));\n  }, []);\n\n  /**\n   * 일정 확인 모달\n   */\n  const [isDrawerVisible, setIsDrawerVisible] = useState(false);\n  const id = useRef(1);\n\n  // 일정 등록\n  const onOk = (text, people, color, isSwitch) => {\n    if (!text) {\n      alert(\"일정을 등록해주세요.\");\n      return;\n    }\n    setIsVisible(false);\n    setEvents([\n      ...events,\n      {\n        id: id.current,\n        allDay: \"\",\n        title: text,\n        start: changeStart,\n        end: isSwitch ? changeStart : changeEnd,\n        backgroundColor: color,\n        borderColor: color,\n        members: people,\n        whiter: \"\",\n      },\n    ]);\n    id.current++;\n  };\n\n  const onCancel = useCallback(() => {\n    setIsVisible(false);\n    setIsDrawerVisible(false);\n  }, []);\n\n  // 일정 삭제\n  const remove = useCallback(\n    (eventId) => {\n      return confirm({\n        icon: <ExclamationCircleOutlined />,\n        content: <div>삭제하시겠습니까?</div>,\n        onOk() {\n          setEvents([...events.filter((p) => p.id !== eventId)]);\n          setIsDrawerVisible(false);\n        },\n        onCancel() {\n          console.log(\"Cancel\");\n        },\n      });\n    },\n    [events, confirm]\n  );\n\n  // 일정 수정\n  const update = useCallback(\n    (id, text, people, color, isSwitch) => {\n      setEvents(\n        events.map((event) => {\n          return event.id === id\n            ? {\n                ...event,\n                title: text,\n                start: changeStart,\n                end: isSwitch ? changeStart : changeEnd,\n                backgroundColor: color,\n                borderColor: color,\n                members: people,\n              }\n            : event;\n        })\n      );\n      setIsDrawerVisible(false);\n    },\n    [events, changeStart, changeEnd]\n  );\n\n  return (\n    <>\n      {/* 캘린더 */}\n      <div style={{ width: \"90%\", height: \"1000px\", margin: \"0 auto\" }}>\n        <FullCalendar\n          plugins={[dayGridPlugsin, interactionPlugin]}\n          initialView=\"dayGridMonth\"\n          timeZone=\"UTC\"\n          events={events}\n          editable={false}\n          dayMaxEvents={true}\n          selectable\n          // 날짜 클릭시 모달창 띄우기\n          select={(info) => {\n            setIsVisible(true);\n            setDateStart(info.start);\n            setDateEnd(info.end);\n            setChangeStart(moment(info.start).format(\"YYYY-MM-DD\"));\n            setChangeEnd(moment(info.end).format(\"YYYY-MM-DD\"));\n          }}\n          // 달력 위에 있는 버튼 또는 연도/월 설정\n          headerToolbar={{\n            left: \"prev,next today\",\n            center: \"title\",\n            right: \"dayGridMonth\",\n          }}\n          locale=\"ko\"\n          // 등록한 일정 클릭시 모달창 띄우기\n          eventClick={(e) => {\n            // 클릭한 일정의 id 값을 찾아서 useState에 저장하여 모달창에 표시\n            setEvent(\n              ...events.filter((p) => p.id === Number(e.event._def.publicId))\n            );\n            setIsDrawerVisible(true);\n          }}\n        />\n        {/*일정 등록 모달 컴포넌트 */}\n        <Modal1\n          visible={isVisible}\n          onOk={onOk}\n          onCancel={onCancel}\n          dateStart={dateStart}\n          dateEnd={dateEnd}\n          isStartDate={false}\n          users={users}\n          onChangeStartDate={onChangeStartDate}\n          changeStart={changeStart}\n          onChangeEndDate={onChangeEndDate}\n          changeEnd={changeEnd}\n        />\n        {/* 일정 확인 모달 컴포넌트 */}\n        <Modal2\n          visible={isDrawerVisible}\n          onClose={onCancel}\n          event={event}\n          remove={remove}\n          update={update}\n          onOk={onOk}\n          users={users}\n          onChangeStartDate={onChangeStartDate}\n          changeStart={changeStart}\n          onChangeEndDate={onChangeEndDate}\n          changeEnd={changeEnd}\n        />\n      </div>\n    </>\n  );\n}\nexport default App;\n","/Users/ggyu/Desktop/starthub/fullcalendar/src/Modal.js",[],"/Users/ggyu/Desktop/starthub/fullcalendar/src/Modal2.js",[],"/Users/ggyu/Desktop/starthub/fullcalendar/src/Select.js",[],"/Users/ggyu/Desktop/starthub/fullcalendar/src/Dateconfig.js",[],"/Users/ggyu/Desktop/starthub/fullcalendar/src/Colorselect.js",[],["40","41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":35,"column":7,"nodeType":"48","messageId":"49","endLine":35,"endColumn":11},{"ruleId":"42","replacedBy":"50"},{"ruleId":"44","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar",["52"],["53"],"no-global-assign","no-unsafe-negation"]